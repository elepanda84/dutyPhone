#!/usr/bin/env python
import smtpd, email, ConfigParser, os
import asyncore

class CustomSMTPServer(smtpd.SMTPServer):
    
    def process_message(self, peer, mailfrom, rcpttos, data):
        global POLLPATH
        print 'Receiving message from:', peer
        print 'Message addressed from:', mailfrom
        print 'Message addressed to  :', rcpttos
        print 'Message length        :', len(data)
	f=open(u'{0}msgSMTP.txt'.format(POLLPATH), 'w+')
	dmsg = email.message_from_string(data)
	if dmsg.is_multipart():
		for payload in dmsg.get_payload():
		# if payload.is_multipart(): ...
			print 'Handling multipart payload'
			print payload.get_payload()
	else:
		print dmsg.get_payload()
		f.write(dmsg.get_payload())
	f.close()
        return

global POLLPATH

dConfig = ConfigParser.ConfigParser()
dConfig.read("config.ini")
POLLPATH = dConfig.get('Folders', 'Drop')
print 'Binding to %s on port %s' % (dConfig.get('Networking', 'Bind'), dConfig.getint('Networking', 'Port'))
print 'Destination folder is '+POLLPATH
if not os.path.exists(POLLPATH):
	print 'Destination folder does not exist.'
	exit()

server = CustomSMTPServer((dConfig.get('Networking', 'Bind'), dConfig.getint('Networking', 'Port')), None)

asyncore.loop()
