#!/usr/bin/env python
import smtpd, email, ConfigParser, os
import asyncore, signal

class CustomSMTPServer(smtpd.SMTPServer):
    
    def process_message(self, peer, mailfrom, rcpttos, data):
        global POLLPATHSMS, POLLPATHWA
        print 'Receiving message from:', peer
        print 'Message addressed from:', mailfrom
        print 'Message addressed to  :', rcpttos
        print 'Message length        :', len(data)
	dmsg = email.message_from_string(data)
	if dmsg.is_multipart():
		for payload in dmsg.get_payload():
		# if payload.is_multipart(): ...
			print 'Handling multipart payload'
			print payload.get_payload()
	else:
		print dmsg.get_payload()
		dpayload = dmsg.get_payload()

	if POLLPATHSMS != '':
		f=open(u'{0}msgSMTP.txt'.format(POLLPATHSMS), 'w+')
		f.write(dpayload)
		f.close()
	if POLLPATHWA != '':
		f=open(u'{0}msgSMTP.txt'.format(POLLPATHWA), 'w+')
		f.write(dpayload)
		f.close()
        return

def signal_handler(signal, frame):
	global pidfile
	os.unlink(pidfile)
        exit(0)

def pid_exists(pid):
    """Check whether pid exists in the current process table.
    UNIX only.
    """
    if pid < 0:
        return False
    if pid == 0:
        # According to "man 2 kill" PID 0 refers to every process
        # in the process group of the calling process.
        # On certain systems 0 is a valid PID but we have no way
        # to know that in a portable fashion.
        raise ValueError('invalid PID 0')
    try:
        os.kill(pid, 0)
    except OSError as err:
        if err.errno == errno.ESRCH:
            # ESRCH == No such process
            return False
        elif err.errno == errno.EPERM:
            # EPERM clearly means there's a process to deny access to
            return True
        else:
            # According to "man 2 kill" possible error values are
            # (EINVAL, EPERM, ESRCH)
            raise
    else:
	return True

global POLLPATHWA, POLLPATHSMS

pid = str(os.getpid())
pidfile = "mail2msg.pid"

if os.path.isfile(pidfile):
        with open(pidfile, 'r') as f:
            curpid=int(f.read().strip())
        if pid_exists(curpid):
            print("%s already exists, exiting" % pidfile)
            exit()
        else:
            print("%s exists, but process is dead. Creating now process file." % pidfile)
    file(pidfile, 'w+').write(pid)

signal.signal(signal.SIGINT, signal_handler)
signal.signal(signal.SIGTERM, signal_handler)

dConfig = ConfigParser.ConfigParser()
dConfig.read("config.ini")
if dConfig.get('Mail2Msg', 'sendSMS') == 'True':
	POLLPATHSMS = dConfig.get('SMS-Q', 'incomingpath')
	print '[Enabled] Send by SMS via '+POLLPATHSMS
	if not os.path.exists(POLLPATHSMS):
		print 'Destination folder for SMS does not exist.'
		exit()
else:
	POLLPATHSMS = ''

if dConfig.get('Mail2Msg', 'sendWA') == 'True':
	POLLPATHWA = dConfig.get('Folders', 'Drop')
	print '[Enabled] Send by WA via '+POLLPATHWA
	if not os.path.exists(POLLPATHWA):
		print 'Destination folder for WA does not exist.'
		exit()
else:
	POLLPATHWA = ''

print 'Binding to %s on port %s' % (dConfig.get('Networking', 'Bind'), dConfig.getint('Networking', 'Port'))
server = CustomSMTPServer((dConfig.get('Networking', 'Bind'), dConfig.getint('Networking', 'Port')), None)

asyncore.loop()
